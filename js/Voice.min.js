export default class Voice{constructor(replaceText=""){if(!(window.SpeechRecognition||window.webkitSpeechRecognition)){this.unsupported=true;throw new Error("Your browser does not support voice recognition")}this.unsupported=false;this.shouldListen=false;this.recognition=new webkitSpeechRecognition;this.recognition.continuous=true;this.recognition.interimResults=true;this.recognition.lang="en-US";this.recognition.onresult=event=>{let interim_transcript="";let final_transcript="";for(let i=event.resultIndex;i<event.results.length;++i){if(event.results[i].isFinal){final_transcript+=event.results[i][0].transcript}else{interim_transcript+=event.results[i][0].transcript}}if(replaceText!==""){final_transcript=final_transcript.replace(replaceText,"");interim_transcript=interim_transcript.replace(replaceText,"")}final_transcript=final_transcript.trim();interim_transcript=interim_transcript.trim();if(interim_transcript!==""){$(this).trigger("interim",[interim_transcript])}else if(final_transcript!==""){$(this).trigger("result",[final_transcript])}};this.recognition.onend=()=>{$(this).trigger("end")}}start(){this.shouldListen=true;this.recognition.start()}stop(){this.shouldListen=false;this.recognition.stop()}speak(message){let msg=new SpeechSynthesisUtterance(message);window.speechSynthesis.speak(msg)}}